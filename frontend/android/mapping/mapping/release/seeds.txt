org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface
com.google.android.gms.common.api.internal.zzd
org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode
org.apache.cordova.CordovaWebViewImpl
androidx.appcompat.widget.SearchView$SearchAutoComplete
androidx.core.content.FileProvider
androidx.appcompat.widget.ViewStubCompat
com.getcapacitor.plugin.CapacitorCookies
androidx.appcompat.widget.ActivityChooserView$InnerLayout
androidx.lifecycle.SavedStateHandleController$1
org.apache.cordova.CordovaHttpAuthHandler
org.chromium.support_lib_boundary.WebMessageListenerBoundaryInterface
android.support.v4.app.RemoteActionCompatParcelizer
org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode
org.apache.cordova.NativeToJsMessageQueue$EvalBridgeMode
com.google.android.gms.auth.api.signin.GoogleSignInAccount
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface
androidx.emoji2.text.EmojiCompatInitializer
androidx.appcompat.view.menu.ExpandedMenuView
org.apache.cordova.CordovaInterfaceImpl
org.apache.cordova.AllowListPlugin
androidx.activity.ComponentActivity$4
androidx.lifecycle.Lifecycling$1
androidx.appcompat.widget.ActionBarOverlayLayout
androidx.lifecycle.ReflectiveGenericLifecycleObserver
com.capacitorjs.plugins.pushnotifications.MessagingService
com.capacitorjs.plugins.keyboard.KeyboardPlugin
com.google.android.gms.common.api.GoogleApiActivity
org.apache.cordova.NativeToJsMessageQueue$NoOpBridgeMode
androidx.lifecycle.LiveData$LifecycleBoundObserver
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface
androidx.versionedparcelable.ParcelImpl
com.google.firebase.messaging.FirebaseMessaging
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface
com.google.firebase.messaging.FirebaseMessagingService
org.chromium.support_lib_boundary.StaticsBoundaryInterface
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface
com.google.firebase.iid.FirebaseInstanceIdReceiver
org.chromium.support_lib_boundary.WebMessageBoundaryInterface
com.google.android.gms.common.GooglePlayServicesManifestException
com.capacitorjs.plugins.app.AppPlugin
com.google.android.gms.common.annotation.KeepName
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior
androidx.fragment.app.FragmentManager$5
androidx.fragment.app.DialogFragment
androidx.appcompat.widget.SearchView
androidx.lifecycle.FullLifecycleObserverAdapter
androidx.versionedparcelable.CustomVersionedParcelable
com.google.firebase.datatransport.TransportRegistrar
androidx.annotation.Keep
com.google.android.gms.common.api.internal.BasePendingResult
androidx.core.app.CoreComponentFactory
androidx.emoji2.text.EmojiCompatInitializer$1
com.getcapacitor.cordova.MockCordovaWebViewImpl
org.apache.cordova.CordovaClientCertRequest
androidx.appcompat.widget.DialogTitle
androidx.appcompat.widget.FitWindowsLinearLayout
com.getcapacitor.cordova.MockCordovaInterfaceImpl
androidx.appcompat.widget.ButtonBarLayout
com.google.android.datatransport.cct.CctBackendFactory
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery
com.capacitorjs.plugins.pushnotifications.PushNotificationsPlugin
androidx.appcompat.view.menu.ActionMenuItemView
androidx.activity.ComponentActivity$5
com.stockoverflow.app.MainActivity
org.apache.cordova.engine.SystemWebView
androidx.coordinatorlayout.widget.CoordinatorLayout
org.apache.cordova.engine.SystemWebViewEngine
androidx.activity.ImmLeaksCleaner
com.google.firebase.components.ComponentDiscoveryService
android.support.v4.graphics.drawable.IconCompatParcelizer
com.google.firebase.messaging.FirebaseMessagingRegistrar
androidx.savedstate.SavedStateRegistry$1
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface
androidx.appcompat.widget.AlertDialogLayout
com.google.android.gms.common.internal.ReflectedParcelable
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
androidx.appcompat.widget.ContentFrameLayout
androidx.appcompat.view.menu.ListMenuItemView
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver
com.google.android.gms.common.SupportErrorDialogFragment
org.chromium.support_lib_boundary.ScriptReferenceBoundaryInterface
androidx.fragment.app.Fragment$5
androidx.appcompat.widget.ActionBarContainer
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface
androidx.appcompat.widget.Toolbar
androidx.appcompat.widget.ActionMenuView
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface
androidx.core.app.RemoteActionCompat
androidx.core.graphics.drawable.IconCompat
androidx.activity.ComponentActivity$3
androidx.lifecycle.SingleGeneratedAdapterObserver
androidx.appcompat.widget.ActionBarContextView
com.google.firebase.FirebaseCommonRegistrar
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface
com.google.android.gms.common.api.Scope
androidx.core.graphics.drawable.IconCompatParcelizer
com.google.android.gms.common.util.DynamiteApi
com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException
androidx.lifecycle.ProcessLifecycleInitializer
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface
com.getcapacitor.plugin.CapacitorHttp
androidx.startup.InitializationProvider
org.apache.cordova.CordovaWebViewImpl$EngineClient
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService
com.capacitorjs.plugins.preferences.PreferencesPlugin
androidx.lifecycle.SavedStateHandleController
androidx.activity.result.ActivityResultRegistry$1
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface
com.capacitorjs.plugins.haptics.HapticsPlugin
com.getcapacitor.cordova.MockCordovaWebViewImpl$CapacitorEvalBridgeMode
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface
org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface
androidx.core.app.RemoteActionCompatParcelizer
com.google.firebase.installations.FirebaseInstallationsRegistrar
androidx.savedstate.Recreator
androidx.lifecycle.CompositeGeneratedAdaptersObserver
androidx.core.widget.NestedScrollView
androidx.appcompat.widget.FitWindowsFrameLayout
org.chromium.support_lib_boundary.IsomorphicObjectBoundaryInterface
com.google.android.gms.common.api.Status
com.getcapacitor.plugin.WebView
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException
androidx.appcompat.app.AlertController$RecycleListView
com.getcapacitor.CapacitorWebView
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface
org.apache.cordova.CoreAndroid
com.google.android.gms.common.api.internal.LifecycleCallback
com.capacitorjs.plugins.statusbar.StatusBarPlugin
com.google.firebase.provider.FirebaseInitProvider
org.apache.cordova.ResumeCallback
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface
com.google.android.gms.signin.internal.zag: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.cloudmessaging.zzd: android.os.Parcelable$Creator CREATOR
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
com.google.android.gms.common.internal.MethodInvocation: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.BackStackRecordState: android.os.Parcelable$Creator CREATOR
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
org.apache.cordova.CordovaPlugin: org.apache.cordova.CordovaInterface cordova
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
org.apache.cordova.engine.SystemWebViewEngine: java.lang.String TAG
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
org.apache.cordova.CoreAndroid: java.lang.String PLUGIN_NAME
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
org.apache.cordova.AllowListPlugin: java.lang.String PLUGIN_NAME
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.internal.zas mResultGuardian
com.google.android.gms.common.internal.zzj: android.os.Parcelable$Creator CREATOR
androidx.activity.result.IntentSenderRequest: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.ProcessLifecycleOwner$3$1: androidx.lifecycle.ProcessLifecycleOwner$3 this$1
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
org.apache.cordova.CordovaPlugin: org.apache.cordova.CordovaWebView webView
org.apache.cordova.CordovaWebViewImpl: java.lang.String TAG
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int MEDIA_QUERY_ONLY
com.google.android.gms.common.internal.zat: android.os.Parcelable$Creator CREATOR
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int PREFER_MEDIA_QUERY_OVER_FORCE_DARK
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.internal.TelemetryData: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int FORCE_DARK_ONLY
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.internal.zav: android.os.Parcelable$Creator CREATOR
com.google.firebase.messaging.RemoteMessage: android.os.Parcelable$Creator CREATOR
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.ProcessLifecycleOwner$3: androidx.lifecycle.ProcessLifecycleOwner this$0
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.cloudmessaging.CloudMessage: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.internal.RootTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setCacheMode(int)
org.apache.cordova.CordovaWebViewImpl: void handleStart()
org.apache.cordova.CoreAndroid: void exitApp()
com.getcapacitor.plugin.CapacitorCookies: void setCookie(java.lang.String,java.lang.String)
com.getcapacitor.ServerPath$PathType: com.getcapacitor.ServerPath$PathType[] values()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
org.apache.cordova.CoreAndroid: void loadUrl(java.lang.String,org.json.JSONObject)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getStatics()
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
org.apache.cordova.CordovaPlugin: void onResume(boolean)
org.apache.cordova.CordovaPlugin: java.lang.Boolean shouldAllowRequest(java.lang.String)
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
org.apache.cordova.engine.SystemWebViewEngine: java.lang.String getUrl()
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
com.capacitorjs.plugins.pushnotifications.PushNotificationsPlugin: void getDeliveredNotifications(com.getcapacitor.PluginCall)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.widget.NestedScrollView: int getScrollRange()
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery: TransportBackendDiscovery()
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.getcapacitor.plugin.CapacitorHttp: void post(com.getcapacitor.PluginCall)
com.getcapacitor.Plugin: void removeAllListeners(com.getcapacitor.PluginCall)
org.apache.cordova.engine.SystemWebView: SystemWebView(android.content.Context)
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.graphics.drawable.IconCompat: IconCompat()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
org.apache.cordova.CallbackContext: void success(org.json.JSONObject)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
org.apache.cordova.CallbackContext: boolean isFinished()
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
org.apache.cordova.CordovaClientCertRequest: java.lang.String getHost()
com.getcapacitor.plugin.CapacitorCookies: void setCookie(com.getcapacitor.PluginCall)
com.capacitorjs.plugins.haptics.arguments.HapticsNotificationType: com.capacitorjs.plugins.haptics.arguments.HapticsNotificationType[] values()
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: int getType(android.content.res.TypedArray,int)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
com.getcapacitor.Plugin: void removeListener(com.getcapacitor.PluginCall)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedHttpError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceResponse)
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance(com.google.firebase.FirebaseApp)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.String[] getSupportedFeatures()
com.getcapacitor.cordova.MockCordovaWebViewImpl: void handleResume(boolean)
org.apache.cordova.CordovaWebViewImpl: org.apache.cordova.CordovaResourceApi getResourceApi()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
org.apache.cordova.CoreAndroid: void fireJavascriptEvent(java.lang.String)
org.apache.cordova.PluginResult$Status: org.apache.cordova.PluginResult$Status valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertSafeBrowsingResponse(java.lang.reflect.InvocationHandler)
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
androidx.core.graphics.TypefaceCompatUtil$Api19Impl: android.os.ParcelFileDescriptor openFileDescriptor(android.content.ContentResolver,android.net.Uri,java.lang.String,android.os.CancellationSignal)
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
org.apache.cordova.CordovaInterfaceImpl: void onCordovaInit(org.apache.cordova.PluginManager)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority valueOf(java.lang.String)
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: void setServiceWorkerClient(java.lang.reflect.InvocationHandler)
androidx.core.app.Person$Api28Impl: androidx.core.app.Person fromAndroidPerson(android.app.Person)
org.apache.cordova.NativeToJsMessageQueue$NoOpBridgeMode: void onNativeToJsMessageAvailable(org.apache.cordova.NativeToJsMessageQueue)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setOffscreenPreRaster(boolean)
androidx.core.app.RemoteInput$Api20Impl: void addResultsToIntent(java.lang.Object,android.content.Intent,android.os.Bundle)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollY(android.view.accessibility.AccessibilityRecord)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.getcapacitor.cordova.MockCordovaInterfaceImpl: org.apache.cordova.CordovaPlugin getActivityResultCallback()
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostResumed(android.app.Activity)
androidx.core.view.ViewCompat$Api31Impl: java.lang.String[] getReceiveContentMimeTypes(android.view.View)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
com.getcapacitor.cordova.MockCordovaWebViewImpl: MockCordovaWebViewImpl(android.content.Context)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
androidx.core.view.ViewCompat$Api16Impl: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
org.apache.cordova.engine.SystemWebView: void setWebViewClient(android.webkit.WebViewClient)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
org.apache.cordova.CoreAndroid: void backHistory()
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
org.apache.cordova.AllowListPlugin: AllowListPlugin()
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
org.apache.cordova.CordovaWebViewImpl: void loadUrlIntoView(java.lang.String,boolean)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getForceDark()
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
androidx.core.app.ActivityCompat$Api16Impl: void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
com.getcapacitor.plugin.CapacitorCookies: boolean isEnabled()
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
com.capacitorjs.plugins.haptics.HapticsPlugin: void selectionChanged(com.getcapacitor.PluginCall)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
androidx.appcompat.widget.AppCompatCheckBox: void setFilters(android.text.InputFilter[])
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void initSafeBrowsing(android.content.Context,android.webkit.ValueCallback)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
org.apache.cordova.CordovaInterfaceImpl: void onRequestPermissionResult(int,java.lang.String[],int[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
com.getcapacitor.cordova.MockCordovaWebViewImpl: void setButtonPlumbedToJs(int,boolean)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setForceDark(int)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
org.apache.cordova.engine.SystemWebViewEngine: void destroy()
org.apache.cordova.CordovaWebViewImpl: void stopLoading()
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: int getAlpha(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebMessagePort(java.lang.reflect.InvocationHandler)
org.apache.cordova.engine.SystemWebViewEngine: void clearCache()
androidx.activity.ComponentActivity: void setContentView(android.view.View)
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void showInterstitial(boolean)
com.getcapacitor.Plugin: void checkPermissions(com.getcapacitor.PluginCall)
androidx.core.app.ActivityCompat$Api16Impl: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
org.apache.cordova.engine.SystemWebViewEngine: SystemWebViewEngine(android.content.Context,org.apache.cordova.CordovaPreferences)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
com.getcapacitor.plugin.CapacitorHttp: void put(com.getcapacitor.PluginCall)
androidx.core.view.ViewCompat$Api16Impl: boolean hasOverlappingRendering(android.view.View)
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
org.apache.cordova.CordovaWebViewImpl: android.content.Context getContext()
androidx.appcompat.widget.AppCompatImageButton: void setImageLevel(int)
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode: void reset()
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority[] values()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
org.apache.cordova.ResumeCallback: void sendPluginResult(org.apache.cordova.PluginResult)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityStopped(android.app.Activity)
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getDefault()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.String getData()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.getcapacitor.PermissionState: com.getcapacitor.PermissionState valueOf(java.lang.String)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int)
androidx.core.view.ViewCompat$Api19Impl: void setAccessibilityLiveRegion(android.view.View,int)
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding[] values()
org.apache.cordova.CordovaPlugin: boolean onReceivedHttpAuthRequest(org.apache.cordova.CordovaWebView,org.apache.cordova.ICordovaHttpAuthHandler,java.lang.String,java.lang.String)
org.apache.cordova.CallbackContext: java.lang.String getCallbackId()
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)
androidx.appcompat.widget.AppCompatImageView: void setImageLevel(int)
org.apache.cordova.CordovaWebViewImpl: void setButtonPlumbedToJs(int,boolean)
org.apache.cordova.AllowListPlugin: org.apache.cordova.AllowList getAllowedNavigations()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getTracingController()
org.apache.cordova.CordovaPlugin: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
androidx.core.widget.ListViewCompat$Api19Impl: void scrollListBy(android.widget.ListView,int)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.getcapacitor.Plugin: void addListener(com.getcapacitor.PluginCall)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status[] values()
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
androidx.appcompat.widget.AppCompatToggleButton: void setFilters(android.text.InputFilter[])
org.apache.cordova.CordovaWebViewImpl$EngineClient: boolean onNavigationAttempt(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SearchView: int getMaxWidth()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.reflect.InvocationHandler[] getPorts()
androidx.core.app.ActivityCompat$Api16Impl: void finishAffinity(android.app.Activity)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
androidx.core.view.MenuItemCompat$Api26Impl: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceError(java.lang.Object)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
org.apache.cordova.engine.SystemWebView: org.apache.cordova.CordovaWebView getCordovaWebView()
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setBlockNetworkLoads(boolean)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
androidx.core.app.RemoteInput$Api26Impl: android.app.RemoteInput$Builder setAllowDataType(android.app.RemoteInput$Builder,java.lang.String,boolean)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType: com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType[] values()
org.apache.cordova.engine.SystemWebViewEngine: void stopLoading()
org.apache.cordova.AllowListPlugin: java.lang.Boolean shouldOpenExternalUrl(java.lang.String)
androidx.core.content.pm.PackageInfoCompat$Api28Impl: android.content.pm.Signature[] getApkContentsSigners(android.content.pm.SigningInfo)
org.apache.cordova.CoreAndroid: CoreAndroid()
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate,android.view.View)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatToggleButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
androidx.core.view.ViewCompat$Api15Impl: boolean hasOnClickListeners(android.view.View)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityStopped(android.app.Activity)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
androidx.core.widget.TextViewCompat$Api17Impl: void setTextDirection(android.view.View,int)
androidx.appcompat.widget.AppCompatCheckedTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.getcapacitor.cordova.MockCordovaWebViewImpl: java.lang.Object postMessage(java.lang.String,java.lang.Object)
org.apache.cordova.CordovaPlugin: boolean execute(java.lang.String,org.apache.cordova.CordovaArgs,org.apache.cordova.CallbackContext)
androidx.appcompat.widget.SearchView: int getPreferredWidth()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
androidx.core.view.ViewCompat$Api31Impl: void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener)
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getOffscreenPreRaster()
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.apache.cordova.CordovaPlugin: boolean onOverrideUrlLoading(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
com.getcapacitor.plugin.WebView: void persistServerBasePath(com.getcapacitor.PluginCall)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
com.google.firebase.components.ComponentDiscoveryService: ComponentDiscoveryService()
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
com.getcapacitor.cordova.MockCordovaWebViewImpl: void clearCache(boolean)
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag[] values()
com.capacitorjs.plugins.haptics.arguments.HapticsNotificationType: com.capacitorjs.plugins.haptics.arguments.HapticsNotificationType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
org.apache.cordova.CordovaWebViewImpl: org.apache.cordova.ICordovaCookieManager getCookieManager()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,java.lang.reflect.InvocationHandler)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface: void onMessage(java.lang.reflect.InvocationHandler,java.lang.reflect.InvocationHandler)
com.google.firebase.datatransport.TransportRegistrar: java.util.List getComponents()
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)
androidx.lifecycle.ProcessLifecycleOwner$3: ProcessLifecycleOwner$3(androidx.lifecycle.ProcessLifecycleOwner)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
org.apache.cordova.AllowListPlugin: void setAllowedNavigations(org.apache.cordova.AllowList)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setWillSuppressErrorPage(boolean)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceRequest(android.webkit.WebResourceRequest)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
org.apache.cordova.engine.SystemWebViewEngine: boolean canGoBack()
org.apache.cordova.CordovaPlugin: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)
org.apache.cordova.CordovaInterfaceImpl: java.util.concurrent.ExecutorService getThreadPool()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
org.apache.cordova.CordovaWebViewImpl: java.lang.String getUrl()
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
androidx.appcompat.widget.AppCompatEditText: void setEmojiCompatEnabled(boolean)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getWebkitToCompatConverter()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
org.apache.cordova.CordovaWebViewImpl$EngineClient: void clearLoadTimeoutTimer()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
org.apache.cordova.AllowListPlugin: void setAllowedIntents(org.apache.cordova.AllowList)
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
org.apache.cordova.CordovaPlugin: void onRestoreStateForActivityResult(android.os.Bundle,org.apache.cordova.CallbackContext)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void postMessageToMainFrame(java.lang.reflect.InvocationHandler,android.net.Uri)
org.apache.cordova.CordovaWebViewImpl: void handleStop()
androidx.core.view.ViewParentCompat$Api21Impl: void onStopNestedScroll(android.view.ViewParent,android.view.View)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
com.capacitorjs.plugins.haptics.HapticsPlugin: void notification(com.getcapacitor.PluginCall)
com.getcapacitor.cordova.MockCordovaInterfaceImpl: MockCordovaInterfaceImpl(androidx.appcompat.app.AppCompatActivity)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getTooltipText(android.view.MenuItem)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
androidx.core.graphics.PaintCompat$Api23Impl: boolean hasGlyph(android.graphics.Paint,java.lang.String)
org.chromium.support_lib_boundary.ScriptReferenceBoundaryInterface: void remove()
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
org.chromium.support_lib_boundary.IsomorphicObjectBoundaryInterface: java.lang.Object getOrCreatePeer(java.util.concurrent.Callable)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.getcapacitor.cordova.MockCordovaWebViewImpl: boolean backHistory()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.apache.cordova.CallbackContext: void sendPluginResult(org.apache.cordova.PluginResult)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
org.apache.cordova.CallbackContext: void success(java.lang.String)
org.apache.cordova.CoreAndroid: void sendResumeEvent(org.apache.cordova.PluginResult)
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
org.apache.cordova.CallbackContext: CallbackContext(java.lang.String,org.apache.cordova.CordovaWebView)
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
androidx.core.app.ActivityCompat$Api23Impl: void requestPermissions(android.app.Activity,java.lang.String[],int)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
org.apache.cordova.AllowListPlugin: AllowListPlugin(org.xmlpull.v1.XmlPullParser)
org.apache.cordova.CordovaPlugin: java.lang.Boolean shouldOpenExternalUrl(java.lang.String)
androidx.core.view.ViewCompat$Api17Impl: android.view.Display getDisplay(android.view.View)
org.apache.cordova.CordovaWebViewImpl: void clearCache()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setForceDarkBehavior(int)
com.google.android.gms.common.SupportErrorDialogFragment: SupportErrorDialogFragment()
com.getcapacitor.cordova.MockCordovaWebViewImpl$CapacitorEvalBridgeMode: void onNativeToJsMessageAvailable(org.apache.cordova.NativeToJsMessageQueue)
org.apache.cordova.CordovaInterfaceImpl: androidx.appcompat.app.AppCompatActivity getActivity()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void addWebMessageListener(java.lang.String,java.lang.String[],java.lang.reflect.InvocationHandler)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)
org.apache.cordova.CordovaPlugin: void onStart()
androidx.core.os.UserManagerCompat$Api24Impl: boolean isUserUnlocked(android.content.Context)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType valueOf(java.lang.String)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void handlePause(boolean)
org.apache.cordova.CordovaWebViewImpl$EngineClient: java.lang.Boolean onDispatchKeyEvent(android.view.KeyEvent)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void hideCustomView()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
com.capacitorjs.plugins.keyboard.KeyboardPlugin: void setResizeMode(com.getcapacitor.PluginCall)
com.getcapacitor.plugin.CapacitorCookies: void clearAllCookies(com.getcapacitor.PluginCall)
androidx.core.view.ViewPropertyAnimatorCompat$Api19Impl: android.view.ViewPropertyAnimator setUpdateListener(android.view.ViewPropertyAnimator,android.animation.ValueAnimator$AnimatorUpdateListener)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
com.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.firebase.messaging.FirebaseMessaging lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
org.apache.cordova.CordovaWebViewImpl: org.apache.cordova.CordovaWebViewEngine createEngine(android.content.Context,org.apache.cordova.CordovaPreferences)
androidx.core.app.NavUtils$Api16Impl: boolean navigateUpTo(android.app.Activity,android.content.Intent)
org.apache.cordova.NativeToJsMessageQueue$BridgeMode: NativeToJsMessageQueue$BridgeMode()
androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebResourceError(java.lang.reflect.InvocationHandler)
androidx.appcompat.widget.AppCompatTextView: void setAllCaps(boolean)
com.capacitorjs.plugins.app.AppPlugin: void getInfo(com.getcapacitor.PluginCall)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getForceDarkBehavior()
org.apache.cordova.engine.SystemWebViewEngine: SystemWebViewEngine(org.apache.cordova.engine.SystemWebView)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.appcompat.widget.AppCompatButton: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: boolean stop(java.io.OutputStream,java.util.concurrent.Executor)
androidx.startup.InitializationProvider: InitializationProvider()
com.getcapacitor.cordova.MockCordovaWebViewImpl: void clearCache()
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList createLocaleList(java.util.Locale[])
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
androidx.appcompat.widget.AppCompatTextView: void setEmojiCompatEnabled(boolean)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
org.apache.cordova.CordovaWebViewImpl: void sendPluginResult(org.apache.cordova.PluginResult,java.lang.String)
androidx.core.content.res.ResourcesCompat$Api23Impl: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api19Impl: boolean isLaidOut(android.view.View)
org.apache.cordova.CordovaInterfaceImpl: void setActivityResultRequestCode(int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPaused(android.app.Activity)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
com.capacitorjs.plugins.haptics.arguments.HapticsImpactType: com.capacitorjs.plugins.haptics.arguments.HapticsImpactType[] values()
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
com.getcapacitor.cordova.MockCordovaWebViewImpl: void loadUrlIntoView(java.lang.String,boolean)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void handleStop()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.core.app.RemoteInput$Api26Impl: java.util.Set getAllowedDataTypes(java.lang.Object)
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
org.apache.cordova.engine.SystemWebViewEngine: android.view.View getView()
androidx.appcompat.widget.AppCompatButton: void setFilters(android.text.InputFilter[])
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintList(android.content.res.ColorStateList)
org.apache.cordova.CallbackContext: void success(org.json.JSONArray)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
com.google.android.gms.common.api.internal.zzd: zzd()
androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.widget.AppCompatToggleButton: void setEmojiCompatEnabled(boolean)
org.apache.cordova.CordovaPlugin: boolean execute(java.lang.String,java.lang.String,org.apache.cordova.CallbackContext)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
androidx.core.app.ActivityCompat$Api23Impl: void onSharedElementsReady(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
com.getcapacitor.cordova.MockCordovaWebViewImpl: org.apache.cordova.CordovaPreferences getPreferences()
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
androidx.core.view.ViewCompat$Api17Impl: int getPaddingStart(android.view.View)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getDisabledActionModeMenuItems()
androidx.core.content.FileProvider$Api21Impl: java.io.File[] getExternalMediaDirs(android.content.Context)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertServiceWorkerSettings(java.lang.Object)
androidx.core.view.ViewCompat$Api19Impl: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.appcompat.resources.Compatibility$Api21Impl: int getChangingConfigurations(android.content.res.TypedArray)
androidx.core.widget.ImageViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: boolean isMultiProcessEnabled()
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
com.google.firebase.installations.FirebaseInstallationsRegistrar: FirebaseInstallationsRegistrar()
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundResource(int)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
com.stockoverflow.app.MainActivity: MainActivity()
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: CloudMessagingReceiver()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
org.apache.cordova.CoreAndroid: void overrideBackbutton(boolean)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
org.apache.cordova.NativeToJsMessageQueue$BridgeMode: void notifyOfFlush(org.apache.cordova.NativeToJsMessageQueue,boolean)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getDrawable(android.graphics.drawable.InsetDrawable)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
com.getcapacitor.cordova.MockCordovaWebViewImpl: android.view.View getView()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.view.MenuItemCompat$Api26Impl: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
org.apache.cordova.CordovaPlugin: java.lang.String getServiceName()
org.apache.cordova.engine.SystemWebViewEngine: void loadUrl(java.lang.String,boolean)
androidx.core.content.ContextCompat$Api24Impl: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
com.capacitorjs.plugins.keyboard.KeyboardPlugin: void show(com.getcapacitor.PluginCall)
androidx.core.widget.TextViewCompat$Api17Impl: int getTextDirection(android.view.View)
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl: void rebase(android.content.res.Resources$Theme)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
androidx.fragment.app.Fragment: Fragment()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: int getCacheMode()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingAllowlist(java.util.Set,android.webkit.ValueCallback)
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag valueOf(java.lang.String)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void setPaused(boolean)
com.getcapacitor.cordova.MockCordovaInterfaceImpl: boolean handlePermissionResult(int,java.lang.String[],int[])
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onPageCommitVisible(android.webkit.WebView,java.lang.String)
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService: JobInfoSchedulerService()
org.apache.cordova.CordovaWebViewImpl: boolean isInitialized()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
org.apache.cordova.AllowListPlugin: org.apache.cordova.AllowList getAllowedRequests()
androidx.core.view.ViewCompat$Api16Impl: int getImportantForAccessibility(android.view.View)
androidx.core.view.ViewCompat$Api16Impl: int getMinimumHeight(android.view.View)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getAdjustedDefault()
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.capacitorjs.plugins.app.AppPlugin: void getState(com.getcapacitor.PluginCall)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
androidx.core.content.pm.PackageInfoCompat$Api28Impl: boolean hasMultipleSigners(android.content.pm.SigningInfo)
androidx.core.view.ViewCompat$Api17Impl: void setPaddingRelative(android.view.View,int,int,int,int)
androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: android.net.Uri getSafeBrowsingPrivacyPolicyUrl()
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
com.google.firebase.messaging.FirebaseMessagingService: FirebaseMessagingService()
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
com.capacitorjs.plugins.pushnotifications.PushNotificationsPlugin: void deleteChannel(com.getcapacitor.PluginCall)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingWhitelist(java.util.List,android.webkit.ValueCallback)
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity)
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
org.apache.cordova.CordovaPlugin: android.net.Uri remapUri(android.net.Uri)
org.apache.cordova.CordovaWebViewImpl: void init(org.apache.cordova.CordovaInterface,java.util.List,org.apache.cordova.CordovaPreferences)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundResource(int)
org.apache.cordova.CordovaWebViewImpl: org.apache.cordova.CordovaWebViewEngine getEngine()
androidx.core.provider.FontProvider$Api16Impl: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal[] values()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
androidx.core.view.ViewCompat$Api16Impl: int getWindowSystemUiVisibility(android.view.View)
androidx.core.view.ViewCompat$Api17Impl: int generateViewId()
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
org.apache.cordova.CordovaInterfaceImpl: boolean onActivityResult(int,int,android.content.Intent)
org.apache.cordova.CordovaPlugin: java.lang.Boolean shouldAllowNavigation(java.lang.String)
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
org.apache.cordova.CordovaPlugin: boolean onReceivedClientCertRequest(org.apache.cordova.CordovaWebView,org.apache.cordova.ICordovaClientCertRequest)
androidx.core.view.ViewCompat$Api16Impl: boolean hasTransientState(android.view.View)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,java.lang.reflect.InvocationHandler)
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
androidx.core.view.ViewCompat$Api17Impl: void setLayoutDirection(android.view.View,int)
com.getcapacitor.plugin.util.MimeType: com.getcapacitor.plugin.util.MimeType valueOf(java.lang.String)
org.apache.cordova.engine.SystemWebViewEngine: org.apache.cordova.CordovaWebView getCordovaWebView()
androidx.appcompat.resources.Compatibility$Api15Impl: void getValueForDensity(android.content.res.Resources,int,int,android.util.TypedValue,boolean)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag valueOf(java.lang.String)
com.capacitorjs.plugins.haptics.HapticsPlugin: void impact(com.getcapacitor.PluginCall)
org.apache.cordova.CordovaClientCertRequest: void cancel()
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: void start(int,java.util.Collection,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
com.capacitorjs.plugins.statusbar.StatusBarPlugin: void getInfo(com.getcapacitor.PluginCall)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
com.getcapacitor.plugin.CapacitorHttp: void request(com.getcapacitor.PluginCall)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status[] values()
org.apache.cordova.CordovaWebViewImpl: void handleDestroy()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
org.apache.cordova.engine.SystemExposedJsApi: java.lang.String exec(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org.apache.cordova.CordovaPlugin: void onNewIntent(android.content.Intent)
androidx.core.widget.CompoundButtonCompat$Api23Impl: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
androidx.core.widget.TextViewCompat$Api16Impl: int getMaxLines(android.widget.TextView)
org.apache.cordova.CordovaInterfaceImpl: void requestPermissions(org.apache.cordova.CordovaPlugin,int,java.lang.String[])
androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
com.getcapacitor.plugin.WebView: void getServerBasePath(com.getcapacitor.PluginCall)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
org.apache.cordova.CordovaWebViewImpl: java.lang.Object postMessage(java.lang.String,java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
org.apache.cordova.CordovaWebViewImpl: void init(org.apache.cordova.CordovaInterface)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatCheckBox: void setEmojiCompatEnabled(boolean)
com.getcapacitor.plugin.CapacitorHttp: void get(com.getcapacitor.PluginCall)
androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)
org.apache.cordova.CordovaWebViewImpl: void clearCache(boolean)
androidx.core.content.pm.PackageInfoCompat$Api28Impl: long getLongVersionCode(android.content.pm.PackageInfo)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier[] values()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowContentAccess()
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
org.apache.cordova.AllowListPlugin: java.lang.Boolean shouldAllowRequest(java.lang.String)
com.capacitorjs.plugins.statusbar.StatusBarPlugin: void setStyle(com.getcapacitor.PluginCall)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getBlockNetworkLoads()
com.capacitorjs.plugins.preferences.PreferencesPlugin: void get(com.getcapacitor.PluginCall)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api17Impl: void setLabelFor(android.view.View,int)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus valueOf(java.lang.String)
androidx.core.view.MenuItemCompat$Api26Impl: int getAlphabeticModifiers(android.view.MenuItem)
org.apache.cordova.engine.SystemWebViewEngine: boolean goBack()
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: java.lang.CharSequence getDescription()
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
com.getcapacitor.cordova.MockCordovaWebViewImpl: void onNewIntent(android.content.Intent)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()
org.apache.cordova.CordovaPlugin: void requestPermissions(int)
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: AbstractSafeParcelable()
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
org.apache.cordova.CordovaPlugin: org.apache.cordova.CordovaResourceApi$OpenForReadResult handleOpenForRead(android.net.Uri)
org.apache.cordova.CordovaWebViewImpl: void hideCustomView()
androidx.appcompat.widget.AppCompatCheckBox: void setAllCaps(boolean)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
org.apache.cordova.NativeToJsMessageQueue$BridgeMode: void reset()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
org.apache.cordova.engine.SystemWebView: SystemWebView(android.content.Context,android.util.AttributeSet)
com.capacitorjs.plugins.haptics.arguments.HapticsImpactType: com.capacitorjs.plugins.haptics.arguments.HapticsImpactType valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
androidx.appcompat.widget.AppCompatCheckedTextView: void setEmojiCompatEnabled(boolean)
androidx.lifecycle.ViewModel: ViewModel()
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType: com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType valueOf(java.lang.String)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
org.apache.cordova.engine.SystemWebViewEngine: void setPaused(boolean)
org.apache.cordova.CoreAndroid: boolean isBackbuttonOverridden()
androidx.core.widget.NestedScrollView$Api21Impl: boolean getClipToPadding(android.view.ViewGroup)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.core.app.NavUtils$Api16Impl: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
org.apache.cordova.CallbackContext: void success(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.view.GravityCompat$Api17Impl: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface: java.lang.String[] getSupportedFeatures()
org.apache.cordova.CordovaWebViewImpl: void handlePause(boolean)
androidx.core.view.ViewCompat$Api31Impl: androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
org.apache.cordova.CordovaPlugin: android.os.Bundle onSaveInstanceState()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.firebase.installations.FirebaseInstallationsRegistrar: com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void showWebPage(java.lang.String,boolean,boolean,java.util.Map)
org.apache.cordova.CoreAndroid: void clearCache()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
org.apache.cordova.CallbackContext: void error(java.lang.String)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
com.getcapacitor.CapacitorWebView: CapacitorWebView(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
androidx.appcompat.widget.AppCompatCheckedTextView: void setAllCaps(boolean)
org.apache.cordova.CordovaInterfaceImpl: void setActivityResultCallback(org.apache.cordova.CordovaPlugin)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
org.apache.cordova.CordovaPlugin: void onDestroy()
org.apache.cordova.ResumeCallback: ResumeCallback(java.lang.String,org.apache.cordova.PluginManager)
androidx.core.widget.TextViewCompat$Api16Impl: boolean getIncludeFontPadding(android.widget.TextView)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
com.capacitorjs.plugins.pushnotifications.PushNotificationsPlugin: void removeAllDeliveredNotifications(com.getcapacitor.PluginCall)
com.getcapacitor.plugin.CapacitorCookies: void deleteCookie(com.getcapacitor.PluginCall)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason[] values()
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode()
com.capacitorjs.plugins.statusbar.StatusBarPlugin: void setOverlaysWebView(com.getcapacitor.PluginCall)
androidx.core.view.GravityCompat$Api17Impl: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
org.apache.cordova.CoreAndroid: void overrideButton(java.lang.String,boolean)
org.apache.cordova.CoreAndroid: java.lang.Object getBuildConfigValue(android.content.Context,java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getObbDirs(android.content.Context)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType[] values()
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostStarted(android.app.Activity)
androidx.appcompat.widget.AppCompatRadioButton: void setFilters(android.text.InputFilter[])
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
org.apache.cordova.CordovaPlugin: void onConfigurationChanged(android.content.res.Configuration)
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.getcapacitor.plugin.CapacitorHttp: void patch(com.getcapacitor.PluginCall)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerController()
com.capacitorjs.plugins.preferences.PreferencesPlugin: void keys(com.getcapacitor.PluginCall)
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
androidx.appcompat.widget.AppCompatCheckedTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.core.content.ContextCompat$Api24Impl: java.io.File getDataDir(android.content.Context)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
androidx.appcompat.widget.Toolbar: void setLogo(int)
androidx.core.app.NavUtils$Api16Impl: android.content.Intent getParentActivityIntent(android.app.Activity)
org.apache.cordova.CordovaPlugin: org.apache.cordova.CordovaPluginPathHandler getPathHandler()
org.apache.cordova.engine.SystemExposedJsApi: java.lang.String retrieveJsMessages(int,boolean)
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getWillSuppressErrorPage()
org.apache.cordova.CordovaClientCertRequest: java.lang.String[] getKeyTypes()
com.getcapacitor.cordova.MockCordovaWebViewImpl: void init(org.apache.cordova.CordovaInterface,java.util.List,org.apache.cordova.CordovaPreferences,android.webkit.WebView)
org.apache.cordova.CallbackContext: void success()
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void close()
androidx.appcompat.widget.Toolbar: android.view.View getNavButtonView()
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
org.apache.cordova.NativeToJsMessageQueue$BridgeMode: void onNativeToJsMessageAvailable(org.apache.cordova.NativeToJsMessageQueue)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertServiceWorkerSettings(java.lang.reflect.InvocationHandler)
org.apache.cordova.AllowListPlugin: AllowListPlugin(android.content.Context)
org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode: void notifyOfFlush(org.apache.cordova.NativeToJsMessageQueue,boolean)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
androidx.core.app.RemoteInput$Api29Impl: int getEditChoicesBeforeSending(java.lang.Object)
org.apache.cordova.CordovaClientCertRequest: void proceed(java.security.PrivateKey,java.security.cert.X509Certificate[])
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
com.capacitorjs.plugins.pushnotifications.PushNotificationsPlugin: void register(com.getcapacitor.PluginCall)
org.apache.cordova.CordovaWebViewImpl$EngineClient: void onPageStarted(java.lang.String)
androidx.core.app.RemoteInput$Api29Impl: android.app.RemoteInput$Builder setEditChoicesBeforeSending(android.app.RemoteInput$Builder,int)
org.apache.cordova.CordovaWebViewImpl: boolean backHistory()
org.apache.cordova.NativeToJsMessageQueue$EvalBridgeMode: NativeToJsMessageQueue$EvalBridgeMode(org.apache.cordova.CordovaWebViewEngine,org.apache.cordova.CordovaInterface)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
org.apache.cordova.engine.SystemExposedJsApi: void setNativeToJsBridgeMode(int,int)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: android.webkit.WebViewClient getWebViewClient()
com.getcapacitor.plugin.CapacitorHttp: boolean isEnabled()
com.google.firebase.datatransport.TransportRegistrar: TransportRegistrar()
com.capacitorjs.plugins.pushnotifications.PushNotificationsPlugin: void removeDeliveredNotifications(com.getcapacitor.PluginCall)
com.capacitorjs.plugins.app.AppPlugin: void getLaunchUrl(com.getcapacitor.PluginCall)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void postMessage(java.lang.reflect.InvocationHandler)
androidx.core.view.ViewCompat$Api17Impl: int getLabelFor(android.view.View)
org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode: void onNativeToJsMessageAvailable(org.apache.cordova.NativeToJsMessageQueue)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getChild(android.graphics.drawable.DrawableContainer$DrawableContainerState,int)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal valueOf(java.lang.String)
androidx.appcompat.resources.Compatibility$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
org.apache.cordova.CordovaPlugin: void privateInitialize(java.lang.String,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaPreferences)
org.apache.cordova.CordovaPlugin: CordovaPlugin()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
org.apache.cordova.CordovaInterfaceImpl: CordovaInterfaceImpl(androidx.appcompat.app.AppCompatActivity,java.util.concurrent.ExecutorService)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode valueOf(java.lang.String)
org.apache.cordova.CordovaHttpAuthHandler: void proceed(java.lang.String,java.lang.String)
androidx.appcompat.widget.SearchView: int getInputType()
org.apache.cordova.CordovaHttpAuthHandler: void cancel()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
androidx.core.app.RemoteInput$Api20Impl: android.os.Bundle getResultsFromIntent(android.content.Intent)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
org.apache.cordova.CordovaInterfaceImpl: boolean hasPermission(java.lang.String)
com.getcapacitor.MessageHandler: void postMessage(java.lang.String)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void init(org.apache.cordova.CordovaInterface,java.util.List,org.apache.cordova.CordovaPreferences)
org.apache.cordova.CordovaInterfaceImpl: void restoreInstanceState(android.os.Bundle)
org.apache.cordova.CoreAndroid: void clearHistory()
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
com.capacitorjs.plugins.haptics.HapticsPlugin: void selectionEnd(com.getcapacitor.PluginCall)
org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode: NativeToJsMessageQueue$OnlineEventsBridgeMode(org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode$OnlineEventsBridgeModeDelegate)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.view.MenuItem)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void removeWebMessageListener(java.lang.String)
org.apache.cordova.CordovaHttpAuthHandler: CordovaHttpAuthHandler(android.webkit.HttpAuthHandler)
androidx.core.os.CancellationSignal$Api16Impl: android.os.CancellationSignal createCancellationSignal()
androidx.core.app.RemoteInput$Api26Impl: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollX(android.view.accessibility.AccessibilityRecord)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType[] values()
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver: AlarmManagerSchedulerBroadcastReceiver()
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values()
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowFileAccess()
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
com.getcapacitor.cordova.MockCordovaWebViewImpl: void sendPluginResult(org.apache.cordova.PluginResult,java.lang.String)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding valueOf(java.lang.String)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
androidx.core.widget.ListViewCompat$Api19Impl: boolean canScrollList(android.widget.ListView,int)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
org.apache.cordova.CordovaClientCertRequest: void ignore()
androidx.core.view.ViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.common.api.PendingResult: PendingResult()
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
androidx.appcompat.widget.AppCompatEditText: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag[] values()
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
com.getcapacitor.cordova.MockCordovaWebViewImpl: boolean isCustomViewShowing()
androidx.core.util.ObjectsCompat$Api19Impl: int hash(java.lang.Object[])
androidx.emoji2.text.EmojiCompatInitializer: EmojiCompatInitializer()
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
com.capacitorjs.plugins.app.AppPlugin: void minimizeApp(com.getcapacitor.PluginCall)
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
androidx.core.view.ViewCompat$Api17Impl: void setLayerPaint(android.view.View,android.graphics.Paint)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: boolean isAutoMirrored(android.graphics.drawable.Drawable)
com.capacitorjs.plugins.keyboard.KeyboardPlugin: void setAccessoryBarVisible(com.getcapacitor.PluginCall)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity)
androidx.core.os.ConfigurationCompat$Api24Impl: android.os.LocaleList getLocales(android.content.res.Configuration)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
androidx.core.app.Person$Api28Impl: android.app.Person toAndroidPerson(androidx.core.app.Person)
com.google.firebase.iid.FirebaseInstanceIdReceiver: FirebaseInstanceIdReceiver()
com.getcapacitor.cordova.MockCordovaWebViewImpl: void handleDestroy()
org.apache.cordova.CordovaPlugin: java.lang.Boolean shouldAllowBridgeAccess(java.lang.String)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalCacheDirs(android.content.Context)
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface: void onComplete(long)
com.getcapacitor.cordova.MockCordovaWebViewImpl: android.content.Context getContext()
com.getcapacitor.cordova.MockCordovaWebViewImpl: void handleStart()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: boolean performAccessibilityAction(android.view.View$AccessibilityDelegate,android.view.View,int,android.os.Bundle)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.capacitorjs.plugins.pushnotifications.PushNotificationsPlugin: void listChannels(com.getcapacitor.PluginCall)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
androidx.appcompat.widget.SearchView: void setIconified(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
com.capacitorjs.plugins.preferences.PreferencesPlugin: void removeOld(com.getcapacitor.PluginCall)
org.apache.cordova.CordovaInterfaceImpl: CordovaInterfaceImpl(androidx.appcompat.app.AppCompatActivity)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void clearHistory()
com.getcapacitor.plugin.CapacitorCookies: void clearCookies(com.getcapacitor.PluginCall)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebMessagePort(java.lang.Object)
org.apache.cordova.CordovaWebViewImpl: void onNewIntent(android.content.Intent)
androidx.core.view.ViewCompat$Api16Impl: boolean getFitsSystemWindows(android.view.View)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: int getErrorCode()
com.getcapacitor.cordova.MockCordovaWebViewImpl: org.apache.cordova.CordovaResourceApi getResourceApi()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSafeBrowsingResponse(java.lang.Object)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
androidx.appcompat.widget.AppCompatButton: void setAllCaps(boolean)
androidx.core.os.TraceCompat$Api18Impl: void endSection()
org.apache.cordova.CordovaPlugin: void onReset()
androidx.core.view.ViewConfigurationCompat$Api28Impl: int getScaledHoverSlop(android.view.ViewConfiguration)
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
com.capacitorjs.plugins.statusbar.StatusBarPlugin: void setBackgroundColor(com.getcapacitor.PluginCall)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
androidx.fragment.app.FragmentActivity: FragmentActivity()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
org.apache.cordova.CordovaPlugin: java.lang.Object onMessage(java.lang.String,java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
com.getcapacitor.Plugin: void requestPermissions(com.getcapacitor.PluginCall)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatTextView: void setFilters(android.text.InputFilter[])
com.getcapacitor.cordova.MockCordovaWebViewImpl: org.apache.cordova.ICordovaCookieManager getCookieManager()
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
org.apache.cordova.NativeToJsMessageQueue$EvalBridgeMode: void onNativeToJsMessageAvailable(org.apache.cordova.NativeToJsMessageQueue)
org.apache.cordova.CordovaPlugin: void onStop()
com.capacitorjs.plugins.pushnotifications.PushNotificationsPlugin: void createChannel(com.getcapacitor.PluginCall)
com.getcapacitor.cordova.MockCordovaWebViewImpl: org.apache.cordova.CordovaWebViewEngine getEngine()
org.apache.cordova.engine.SystemWebViewEngine: void evaluateJavascript(java.lang.String,android.webkit.ValueCallback)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowContentAccess(boolean)
org.apache.cordova.AllowListPlugin: java.lang.Boolean shouldAllowNavigation(java.lang.String)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface: void onRendererResponsive(android.webkit.WebView,java.lang.reflect.InvocationHandler)
org.apache.cordova.CordovaInterfaceImpl: java.lang.Object onMessage(java.lang.String,java.lang.Object)
org.apache.cordova.CallbackContext: void error(org.json.JSONObject)
com.getcapacitor.cordova.MockCordovaWebViewImpl$CapacitorEvalBridgeMode: MockCordovaWebViewImpl$CapacitorEvalBridgeMode(android.webkit.WebView,org.apache.cordova.CordovaInterface)
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
com.getcapacitor.cordova.MockCordovaWebViewImpl: boolean isInitialized()
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
androidx.core.view.ViewCompat$Api16Impl: void setHasTransientState(android.view.View,boolean)
org.apache.cordova.CordovaWebViewImpl: void clearHistory()
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.google.android.datatransport.cct.CctBackendFactory: com.google.android.datatransport.runtime.backends.TransportBackend create(com.google.android.datatransport.runtime.backends.CreationContext)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority valueOf(java.lang.String)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType[] values()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
com.google.firebase.messaging.EnhancedIntentService: EnhancedIntentService()
org.apache.cordova.AllowListPlugin: void setAllowedRequests(org.apache.cordova.AllowList)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
com.capacitorjs.plugins.preferences.PreferencesPlugin: void clear(com.getcapacitor.PluginCall)
org.apache.cordova.CordovaWebViewImpl: boolean isCustomViewShowing()
org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode: NativeToJsMessageQueue$LoadUrlBridgeMode(org.apache.cordova.CordovaWebViewEngine,org.apache.cordova.CordovaInterface)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
androidx.core.content.res.ResourcesCompat$Api15Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getProxyController()
org.apache.cordova.CordovaWebViewImpl: CordovaWebViewImpl(org.apache.cordova.CordovaWebViewEngine)
org.apache.cordova.CordovaWebViewImpl: org.apache.cordova.CordovaPreferences getPreferences()
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
com.capacitorjs.plugins.keyboard.KeyboardPlugin: void hide(com.getcapacitor.PluginCall)
androidx.core.widget.PopupWindowCompat$Api19Impl: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void triggerDocumentEvent(java.lang.String)
org.apache.cordova.CordovaClientCertRequest: CordovaClientCertRequest(android.webkit.ClientCertRequest)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.getcapacitor.ServerPath$PathType: com.getcapacitor.ServerPath$PathType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.capacitorjs.plugins.preferences.PreferencesPlugin: void configure(com.getcapacitor.PluginCall)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: EmptyActivityLifecycleCallbacks()
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
androidx.core.view.ViewCompat$Api19Impl: int getAccessibilityLiveRegion(android.view.View)
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
org.apache.cordova.CordovaInterfaceImpl: android.content.Context getContext()
androidx.core.view.ViewCompat$Api17Impl: boolean isPaddingRelative(android.view.View)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype[] values()
androidx.appcompat.widget.SearchView: int getImeOptions()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface: void onRendererUnresponsive(android.webkit.WebView,java.lang.reflect.InvocationHandler)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebResourceRequest)
org.apache.cordova.CordovaInterfaceImpl: void startActivityForResult(org.apache.cordova.CordovaPlugin,android.content.Intent,int)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
androidx.core.os.TraceCompat$Api18Impl: void beginSection(java.lang.String)
com.getcapacitor.PermissionState: com.getcapacitor.PermissionState[] values()
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
org.apache.cordova.CordovaWebViewImpl: boolean canGoBack()
androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCheckMarkTintList()
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
org.apache.cordova.CordovaWebViewImpl: void sendJavascript(java.lang.String)
org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface: boolean terminate()
androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
androidx.appcompat.widget.AppCompatEditText: void setKeyListener(android.text.method.KeyListener)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.apache.cordova.engine.SystemWebViewEngine: SystemWebViewEngine(org.apache.cordova.engine.SystemWebView,org.apache.cordova.CordovaPreferences)
com.getcapacitor.cordova.MockCordovaWebViewImpl: org.apache.cordova.PluginManager getPluginManager()
org.apache.cordova.CordovaWebViewImpl: void showCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler createWebView(android.webkit.WebView)
androidx.core.widget.TextViewCompat$Api17Impl: java.util.Locale getTextLocale(android.widget.TextView)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
com.getcapacitor.cordova.MockCordovaWebViewImpl: boolean isButtonPlumbedToJs(int)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
org.apache.cordova.CordovaClientCertRequest: java.security.Principal[] getPrincipals()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
androidx.core.view.GravityCompat$Api17Impl: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
org.apache.cordova.CallbackContext: void success(byte[])
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat[] values()
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
androidx.core.view.ViewCompat$Api17Impl: int getPaddingEnd(android.view.View)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.capacitorjs.plugins.app.AppPlugin: void exitApp(com.getcapacitor.PluginCall)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void sendJavascript(java.lang.String)
androidx.core.content.ContextCompat$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void proceed(boolean)
com.capacitorjs.plugins.preferences.PreferencesPlugin: void migrate(com.getcapacitor.PluginCall)
androidx.core.os.CancellationSignal$Api16Impl: void cancel(java.lang.Object)
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
org.apache.cordova.CordovaPlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void insertVisualStateCallback(long,java.lang.reflect.InvocationHandler)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
com.google.firebase.FirebaseCommonRegistrar: FirebaseCommonRegistrar()
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler[] createWebMessageChannel()
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
com.getcapacitor.cordova.MockCordovaWebViewImpl: java.lang.String getUrl()
androidx.core.view.ViewCompat$Api16Impl: android.view.ViewParent getParentForAccessibility(android.view.View)
org.apache.cordova.CordovaWebViewImpl: void handleResume(boolean)
org.chromium.support_lib_boundary.WebMessageListenerBoundaryInterface: void onPostMessage(android.webkit.WebView,java.lang.reflect.InvocationHandler,android.net.Uri,boolean,java.lang.reflect.InvocationHandler)
org.apache.cordova.CallbackContext: boolean isChangingThreads()
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
org.apache.cordova.AllowListPlugin: void pluginInitialize()
androidx.lifecycle.SavedStateHandleController$OnRecreation: SavedStateHandleController$OnRecreation()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getSafeBrowsingEnabled()
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
org.apache.cordova.CoreAndroid: void onDestroy()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode: void onNativeToJsMessageAvailable(org.apache.cordova.NativeToJsMessageQueue)
org.apache.cordova.AllowListPlugin: org.apache.cordova.AllowList getAllowedIntents()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
org.apache.cordova.PluginResult$Status: org.apache.cordova.PluginResult$Status[] values()
androidx.core.widget.TextViewCompat$Api16Impl: int getMinLines(android.widget.TextView)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
com.getcapacitor.plugin.CapacitorHttp: void delete(com.getcapacitor.PluginCall)
androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerWebSettings()
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
org.apache.cordova.engine.SystemWebView: void setWebChromeClient(android.webkit.WebChromeClient)
org.apache.cordova.CordovaPlugin: void onPause(boolean)
com.google.firebase.provider.FirebaseInitProvider: FirebaseInitProvider()
androidx.core.view.ViewCompat$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
androidx.core.app.ActivityCompat$Api23Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler,android.os.Handler)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
androidx.appcompat.widget.SearchView: void setInputType(int)
androidx.core.view.ViewCompat$Api16Impl: void setBackground(android.view.View,android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.FragmentContainerView: androidx.fragment.app.Fragment getFragment()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setSafeBrowsingEnabled(boolean)
androidx.core.content.pm.PackageInfoCompat$Api28Impl: boolean hasSigningCertificate(android.content.pm.PackageManager,java.lang.String,byte[],int)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
org.apache.cordova.CordovaClientCertRequest: int getPort()
org.apache.cordova.CordovaWebViewImpl: void loadUrl(java.lang.String)
androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)
androidx.appcompat.widget.AppCompatTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.core.widget.ImageViewCompat$Api21Impl: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
org.apache.cordova.CordovaInterfaceImpl: void requestPermission(org.apache.cordova.CordovaPlugin,int,java.lang.String)
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: boolean isTracing()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.appcompat.resources.Compatibility$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.core.widget.TextViewCompat$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status valueOf(java.lang.String)
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
com.capacitorjs.plugins.keyboard.KeyboardPlugin: void getResizeMode(com.getcapacitor.PluginCall)
com.capacitorjs.plugins.haptics.HapticsPlugin: void selectionStart(com.getcapacitor.PluginCall)
androidx.core.content.pm.PackageInfoCompat$Api28Impl: android.content.pm.Signature[] getSigningCertificateHistory(android.content.pm.SigningInfo)
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException: GooglePlayServicesMissingManifestValueException()
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void backToSafety(boolean)
androidx.core.view.ViewCompat$Api16Impl: int getMinimumWidth(android.view.View)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: android.webkit.WebChromeClient getWebChromeClient()
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void setProxyOverride(java.lang.String[][],java.lang.String[],java.lang.Runnable,java.util.concurrent.Executor)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSettings(android.webkit.WebSettings)
com.getcapacitor.plugin.CapacitorCookies: java.lang.String getCookies()
org.apache.cordova.CordovaPlugin: boolean hasPermisssion()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void setWebViewRendererClient(java.lang.reflect.InvocationHandler)
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
androidx.core.util.ObjectsCompat$Api19Impl: boolean equals(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
androidx.core.app.ComponentActivity: ComponentActivity()
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void clearProxyOverride(java.lang.Runnable,java.util.concurrent.Executor)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
com.capacitorjs.plugins.statusbar.StatusBarPlugin: void hide(com.getcapacitor.PluginCall)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
org.apache.cordova.CallbackContext: void error(int)
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
androidx.appcompat.widget.AppCompatButton: void setEmojiCompatEnabled(boolean)
org.apache.cordova.CordovaWebViewImpl: boolean isButtonPlumbedToJs(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
org.apache.cordova.CordovaInterfaceImpl: void onSaveInstanceState(android.os.Bundle)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: void setSupportLibraryVersion(java.lang.String)
com.google.android.gms.common.api.internal.BasePendingResult: BasePendingResult()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
androidx.lifecycle.ProcessLifecycleOwner$3$1: ProcessLifecycleOwner$3$1(androidx.lifecycle.ProcessLifecycleOwner$3)
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
com.getcapacitor.cordova.MockCordovaWebViewImpl: void eval(java.lang.String,android.webkit.ValueCallback)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.fragment.app.DialogFragment: DialogFragment()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
androidx.core.view.ViewConfigurationCompat$Api28Impl: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration)
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform[] values()
com.capacitorjs.plugins.haptics.HapticsPlugin: void vibrate(com.getcapacitor.PluginCall)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
com.getcapacitor.plugin.util.MimeType: com.getcapacitor.plugin.util.MimeType[] values()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
androidx.core.content.FileProvider: FileProvider()
com.getcapacitor.plugin.WebView: void setServerBasePath(com.getcapacitor.PluginCall)
com.capacitorjs.plugins.keyboard.KeyboardPlugin: void setScroll(com.getcapacitor.PluginCall)
org.apache.cordova.CordovaWebViewImpl$EngineClient: void onPageFinishedLoading(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
com.getcapacitor.cordova.MockCordovaWebViewImpl: boolean canGoBack()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler addDocumentStartJavaScript(java.lang.String,java.lang.String[])
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
org.apache.cordova.AllowListPlugin: AllowListPlugin(org.apache.cordova.AllowList,org.apache.cordova.AllowList,org.apache.cordova.AllowList)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getWebViewRendererClient()
androidx.appcompat.widget.Toolbar: void setTitle(int)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event valueOf(java.lang.String)
androidx.core.view.MenuItemCompat$Api26Impl: int getNumericModifiers(android.view.MenuItem)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
org.apache.cordova.CordovaWebViewImpl: void showWebPage(java.lang.String,boolean,boolean,java.util.Map)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
com.getcapacitor.BridgeActivity: BridgeActivity()
com.getcapacitor.cordova.MockCordovaWebViewImpl: void showCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback)
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] values()
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
org.apache.cordova.engine.SystemWebViewEngine: void clearHistory()
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int)
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
org.apache.cordova.CordovaWebViewImpl: org.apache.cordova.PluginManager getPluginManager()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
com.google.firebase.messaging.FirebaseMessagingRegistrar: FirebaseMessagingRegistrar()
androidx.appcompat.widget.AppCompatRadioButton: void setEmojiCompatEnabled(boolean)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface: void postMessage(java.lang.String)
com.google.android.datatransport.cct.CctBackendFactory: CctBackendFactory()
androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
org.apache.cordova.CordovaWebViewImpl: android.view.View getView()
org.apache.cordova.CoreAndroid: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)
org.apache.cordova.CoreAndroid: void pluginInitialize()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowFileAccess(boolean)
androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
com.capacitorjs.plugins.pushnotifications.MessagingService: MessagingService()
org.apache.cordova.engine.SystemWebViewEngine: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebViewEngine$Client,org.apache.cordova.CordovaResourceApi,org.apache.cordova.PluginManager,org.apache.cordova.NativeToJsMessageQueue)
org.apache.cordova.NativeToJsMessageQueue$NoOpBridgeMode: NativeToJsMessageQueue$NoOpBridgeMode()
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
androidx.core.view.ViewCompat$Api19Impl: boolean isLayoutDirectionResolved(android.view.View)
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface: boolean isRedirect()
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
org.apache.cordova.CordovaPlugin: void onRequestPermissionResult(int,java.lang.String[],int[])
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setDisabledActionModeMenuItems(int)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void loadUrl(java.lang.String)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.core.view.ViewCompat$Api16Impl: void requestFitSystemWindows(android.view.View)
androidx.appcompat.widget.AppCompatRadioButton: void setAllCaps(boolean)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
androidx.core.widget.TextViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
com.capacitorjs.plugins.statusbar.StatusBarPlugin: void show(com.getcapacitor.PluginCall)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
com.capacitorjs.plugins.preferences.PreferencesPlugin: void remove(com.getcapacitor.PluginCall)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
org.apache.cordova.CordovaPlugin: void onActivityResult(int,int,android.content.Intent)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
org.apache.cordova.engine.SystemWebViewEngine: org.apache.cordova.ICordovaCookieManager getCookieManager()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
androidx.appcompat.widget.AppCompatToggleButton: void setAllCaps(boolean)
org.apache.cordova.CordovaWebViewImpl$EngineClient: void onReceivedError(int,java.lang.String,java.lang.String)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType valueOf(java.lang.String)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void stopLoading()
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
androidx.appcompat.widget.Toolbar: java.util.ArrayList getCurrentMenuItems()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType valueOf(java.lang.String)
com.capacitorjs.plugins.preferences.PreferencesPlugin: void set(com.getcapacitor.PluginCall)
com.capacitorjs.plugins.keyboard.KeyboardPlugin: void setStyle(com.getcapacitor.PluginCall)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getWebViewRenderer()
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
org.apache.cordova.engine.SystemWebView: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.activity.ComponentActivity: ComponentActivity()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int)
androidx.core.app.RemoteInput$Api26Impl: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event[] values()
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode[] values()
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
